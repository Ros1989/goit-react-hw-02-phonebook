{"version":3,"sources":["components/ContactsForm/StyledComponents.js","components/ContactsForm/ContactsForm.jsx","components/ContactsList/StyledComponents.js","components/ContactsList/ContactsList.jsx","components/Section/StyledComponents.js","components/Section/Section.jsx","components/ContactsFilter/StyledComponents.js","components/ContactsFilter/ContactsFilter.jsx","components/App.js","index.js"],"names":["Form","styled","form","FormLabel","label","Input","input","Button","button","INITIAL_STATE","name","number","ContactsForm","state","handleInputChange","event","target","value","setState","handleSubmitForm","e","preventDefault","Number","isNaN","alert","props","addContact","resetForm","this","onSubmit","type","placeholder","onChange","Component","TaskList","ul","TaskItem","li","TaskItemElements","p","ContactsList","items","onDeleteContact","map","i","onClick","id","Section","section","Title","h2","SectionBlock","title","children","FilterBlock","div","Label","FilterContacts","OnInputFilter","App","contacts","phone","nameFilter","find","contact","uuidv4","filterContactList","filter","item","toLowerCase","includes","deleteContact","prevState","contactsFilterInput","inputValue","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"47BAEA,IAAMA,EAAOC,IAAOC,KAAV,KAMJC,EAAYF,IAAOG,MAAV,KAQTC,EAAQJ,IAAOK,MAAV,KAKLC,EAASN,IAAOO,OAAV,KChBLC,EAAgB,CACnBC,KAAM,GACNC,OAAQ,IAmEGC,E,4MAzDZC,MAAQJ,E,EAEXK,kBAAoB,SAAAC,GAAU,IAAD,EACDA,EAAMC,OAAtBN,EADiB,EACjBA,KAAMO,EADW,EACXA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,EAGxBE,iBAAmB,SAAAC,GACjBA,EAAEC,iBADoB,MAEK,EAAKR,MAAtBH,EAFY,EAEZA,KAAMC,EAFM,EAENA,OACVD,GAASC,EAKRW,OAAOC,OAAO,EAAKV,MAAMF,QAChCa,MAAM,2CAGH,EAAKC,MAAMC,WAAW,EAAKb,OAChC,EAAKK,SAAST,IATZe,MAAM,sC,EAYRG,UAAY,kBAAK,EAAKd,MAAMJ,I,uDAGlB,IAAD,EACoBmB,KAAKf,MAAtBH,EADH,EACGA,KAAMC,EADT,EACSA,OACd,OACI,eAACX,EAAD,CAAM6B,SAAUD,KAAKT,iBAArB,UACK,eAAChB,EAAD,kBAEP,cAACE,EAAD,CACEyB,KAAK,OACLpB,KAAK,OACLO,MAAOP,EACPqB,YAAY,aACZC,SAAUJ,KAAKd,uBAGnB,eAACX,EAAD,oBAEE,cAACE,EAAD,CACEK,KAAK,SACLoB,KAAK,MACLb,MAAON,EACPoB,YAAY,qBACZC,SAAUJ,KAAKd,uBAGnB,cAACP,EAAD,CAAQuB,KAAK,SAAb,gC,GAzDmBG,a,q3BCR3B,IAAMC,EAAWjC,IAAOkC,GAAV,KAIRC,EAAWnC,IAAOoC,GAAV,KAeRC,EAAmBrC,IAAOsC,EAAV,KAMhBhC,EAASN,IAAOO,OAAV,KCrBG,SAASgC,EAAT,GAAmD,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,gBAC1C,OAEI,cAACR,EAAD,UACKO,EAAME,KAAI,SAAAC,GAAC,OACR,eAACR,EAAD,WACI,eAACE,EAAD,WAAmBM,EAAElC,KAArB,QACA,cAAC4B,EAAD,UAAmBM,EAAEjC,SACrB,cAAC,EAAD,CAAQmB,KAAK,SAASe,QAAS,kBAAMH,EAAgBE,EAAEE,KAAvD,sBAHWF,EAAEE,S,kaCTjC,IAAMC,EAAU9C,IAAO+C,QAAV,KASPC,EAAQhD,IAAOiD,GAAV,KCPI,SAASC,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC1C,OACI,eAACN,EAAD,WACI,cAACE,EAAD,UAAQG,IACPC,K,0hBCNb,IAAMC,EAAcrD,IAAOsD,IAAV,KAKXC,EAAQvD,IAAOG,MAAV,KAQL6C,EAAQhD,IAAOsC,EAAV,KAOLlC,EAAQJ,IAAOK,MAAV,KClBI,SAASmD,EAAT,GAAmD,IAAzBxC,EAAwB,EAAxBA,MAAOyC,EAAiB,EAAjBA,cAC5C,OACI,cAACJ,EAAD,UACI,eAACE,EAAD,WACI,cAAC,EAAD,oCACA,cAAC,EAAD,CAAO1B,KAAK,OAAOb,MAAOA,EAAOe,SAAU,SAAAjB,GAAK,OAAI2C,EAAc3C,EAAMC,OAAOC,e,YCD1E0C,E,4MACnB9C,MAAQ,CACN+C,SAAU,CACR,CAAEd,GAAI,OAAQpC,KAAM,gBAAiBmD,MAAO,aAC5C,CAAEf,GAAI,OAAQpC,KAAM,iBAAkBmD,MAAO,aAC7C,CAAEf,GAAI,OAAQpC,KAAM,gBAAiBmD,MAAO,aAC5C,CAAEf,GAAI,OAAQpC,KAAM,iBAAkBmD,MAAO,cAE9CC,WAAY,I,EAIfpC,WAAa,YAAuB,IAApBhB,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACpB,GAAI,EAAKE,MAAM+C,SAASG,MAAK,SAAAC,GAAO,OAAIA,EAAQtD,OAASA,KACvDc,MAAM,GAAD,OAAId,EAAJ,yCADP,CAIA,IAAMsD,EAAU,CACdlB,GAAImB,cACJvD,OACAC,UAEF,EAAKO,UAAS,SAAAL,GACZ,MAAO,CAAE+C,SAAS,GAAD,mBAAM/C,EAAM+C,UAAZ,CAAsBI,U,EAI3CE,kBAAoB,WACd,OAAO,EAAKrD,MAAM+C,SAASO,QAAO,SAAAC,GAAI,OAClCA,EAAK1D,KAAK2D,cAAcC,SAAS,EAAKzD,MAAMiD,WAAWO,mB,EAIhEE,cAAgB,SAACzB,GACZ,EAAK5B,UAAS,SAACsD,GACX,MAAO,CACHZ,SAAUY,EAAUZ,SAASO,QAAO,SAAA/C,GAAC,OAAIA,EAAE0B,KAAOA,U,EAKhE2B,oBAAsB,SAACC,GACjB,EAAKxD,SAAS,CACV4C,WAAYY,K,uDAIZ,IACAZ,EAAelC,KAAKf,MAApBiD,WACFa,EAAkB/C,KAAKsC,oBAC7B,OACE,mCACE,eAACf,EAAD,CAAcC,MAAM,YAApB,UACE,cAAC,EAAD,CAAc1B,WAAYE,KAAKF,aAC/B,cAAC,EAAD,CAAgBT,MAAO6C,EAAYJ,cAAe9B,KAAK6C,sBACvD,cAACjC,EAAD,CAAcC,MAAOkC,EAAiBjC,gBAAiBd,KAAK2C,yB,GAvDrCtC,aCHjC2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc8afa20.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst Form = styled.form`\r\nmax-width:100%;\r\ndisplay:flex;\r\njustify-content:center;\r\nflex-wrap:wrap;\r\n`\r\nconst FormLabel = styled.label`\r\nwidth:85%;\r\nmargin-bottom:10px;\r\ndisplay:flex;\r\njustify-content:space-around;\r\nfont-weight: 500;\r\ncolor: #FF18CD;\r\n`\r\nconst Input = styled.input`\r\nheight: 15px;\r\nwidth: 250px;\r\n`\r\n\r\nconst Button = styled.button`\r\npadding:2px 10px;\r\nmax-width:250px;\r\nheight:30px;\r\nbackground-color:#FFF418;\r\nborder:none;\r\nborder-radius:0.5rem;\r\ncursor:pointer;\r\n:hover{\r\n    transform: scale(1.2);\r\n}\r\n`\r\n\r\nexport { Form, FormLabel, Input, Button }","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, FormLabel, Input, Button } from './StyledComponents'\r\n\r\n\r\nconst  INITIAL_STATE = {\r\n    name: '',\r\n    number: '',\r\n}\r\n\r\nclass ContactsForm extends Component {\r\n\r\n    static propTypes = {\r\n        addContact: PropTypes.func.isRequired,\r\n    };\r\n\r\n\r\n   state = INITIAL_STATE\r\n\r\nhandleInputChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n    };\r\n    \r\n    handleSubmitForm = e => {\r\n      e.preventDefault();\r\n        const { name, number } = this.state;\r\n       if (!name || !number) {\r\n      alert('You have not entered all the data');\r\n      return;\r\n        }\r\n\r\n         if (Number.isNaN(+this.state.number)) {\r\n      alert('Phone number must contain only numbers');\r\n      return;\r\n        }\r\n         this.props.addContact(this.state);\r\n    this.setState(INITIAL_STATE);\r\n    }\r\n\r\n    resetForm = () =>this.state(INITIAL_STATE)\r\n     \r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <Form onSubmit={this.handleSubmitForm}>\r\n                 <FormLabel>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder='Enter name'\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </FormLabel>\r\n        <FormLabel>\r\n          Number\r\n          <Input\r\n            name=\"number\"\r\n            type=\"tel\"\r\n            value={number}\r\n            placeholder='Enter phone number'\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </FormLabel>\r\n        <Button type=\"submit\">Add contact</Button>\r\n        </Form>\r\n    )\r\n    }\r\n    \r\n}\r\n\r\nexport default ContactsForm;","import styled from 'styled-components'\r\n\r\nconst TaskList = styled.ul`\r\nmax-width:700px;\r\nmargin:0 auto;\r\n`\r\nconst TaskItem = styled.li`\r\npadding:5px 5px 5px 5px;\r\nwidth:100%;\r\ndisplay:flex;\r\njustify-content:space-between;\r\n/* background-color:grey; */\r\n background-color: #fff;\r\n  :not(:nth-child(odd)) {\r\n    background-color: #cacaca;\r\n  }\r\nborder:1px solid black;\r\nborder-radius:0.5rem;\r\nmargin-bottom:10px;\r\nbox-shadow: 10px 5px 5px grey;\r\n`\r\nconst TaskItemElements = styled.p`\r\nfont-weight: 500;\r\n&:not(:last-child){\r\n    margin-right:10px;\r\n}\r\n`\r\nconst Button = styled.button`\r\npadding:5px 10px;\r\nmax-width:200px;\r\nheight:20px;\r\nbackground-color:goldenrod;\r\nborder:none;\r\nborder-radius:0.5rem;\r\nfont-size:0.6rem;\r\ncolor:#fff;\r\ntext-transform:uppercase;\r\ncursor:pointer;\r\n`\r\nexport { TaskList, TaskItem, TaskItemElements, Button }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TaskList, TaskItem, TaskItemElements, Button } from './StyledComponents';\r\n\r\n\r\n\r\nexport default function ContactsList({ items, onDeleteContact }) {\r\n    return (\r\n\r\n        <TaskList>\r\n            {items.map(i => (\r\n                <TaskItem key={i.id}>\r\n                    <TaskItemElements>{i.name} :</TaskItemElements>\r\n                    <TaskItemElements>{i.number}</TaskItemElements>\r\n                    <Button type=\"button\" onClick={() => onDeleteContact(i.id)}>Delete</Button>\r\n                </TaskItem>\r\n            ))}\r\n        </TaskList>\r\n    )\r\n}\r\n\r\nContactsList.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func\r\n};","import styled from 'styled-components'\r\n\r\nconst Section = styled.section`\r\npadding:20px 0px 20px;\r\nmax-width:600px;\r\nmargin: 0 auto;\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\njustify-content:center;\r\nbackground-color: #18F0FF;\r\n`\r\nconst Title = styled.h2`\r\nwidth:100%;\r\ntext-align:center;\r\nfont-size:2rem;\r\ncolor:#1834FF;\r\nfont-weight:600;\r\ntext-transform:uppercase;\r\nmargin-bottom:40px;\r\n`\r\n\r\nexport { Section, Title }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Section, Title } from './StyledComponents';\r\n\r\nexport default function SectionBlock({ title, children }) {\r\n    return (\r\n        <Section>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </Section>\r\n    )\r\n}\r\n\r\nSectionBlock.propTypes = {\r\n    title: PropTypes.string,\r\n};","import styled from 'styled-components'\r\n\r\nconst FilterBlock = styled.div`\r\nwidth:100%;\r\npadding-bottom:20px;\r\nmargin-top: 10px;\r\n`\r\nconst Label = styled.label`\r\nwidth:100%;\r\nfont-weight: 500;\r\n\r\ndisplay:flex;\r\nflex-wrap:wrap;\r\njustify-content:center;\r\n`\r\nconst Title = styled.p`\r\nwidth:100%;\r\n/* text-align:center; */\r\nmargin-bottom:5px;\r\nmargin-left: 205px;\r\ncolor: #FF188C;\r\n`\r\nconst Input = styled.input`\r\nwidth:30%;\r\n`\r\nexport { FilterBlock, Label, Title, Input }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FilterBlock, Label, Title, Input } from './StyledComponents'\r\n\r\nexport default function FilterContacts({ value, OnInputFilter }) {\r\n    return (\r\n        <FilterBlock>\r\n            <Label>\r\n                <Title>Find Contacts by name</Title>\r\n                <Input type=\"text\" value={value} onChange={event => OnInputFilter(event.target.value)} />\r\n            </Label>\r\n        </FilterBlock>\r\n    )\r\n}\r\n\r\nFilterContacts.propTypes = {\r\n    OnInputFilter: PropTypes.func,\r\n    value: PropTypes.string\r\n};","import React, { Component } from 'react';\r\nimport ContactsForm from './ContactsForm';\r\nimport ContactsList from './ContactsList';\r\nimport SectionBlock from './Section';\r\nimport ContactsFilter from './ContactsFilter'\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', phone: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', phone: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', phone: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', phone: '227-91-26' },\r\n    ],\r\n     nameFilter: ''\r\n  };\r\n\r\n  \r\n  addContact = ({ name, number }) => {\r\n    if (this.state.contacts.find(contact => contact.name === name)) {\r\n      alert(`${name} is in the list of your contacts`);\r\n      return;\r\n    }\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    this.setState(state => {\r\n      return { contacts: [...state.contacts, contact] };\r\n    });\r\n  }\r\n\r\n  filterContactList = () => {\r\n        return this.state.contacts.filter(item =>\r\n            item.name.toLowerCase().includes(this.state.nameFilter.toLowerCase())\r\n        )\r\n  }\r\n\r\n   deleteContact = (id) => {\r\n        this.setState((prevState) => {\r\n            return {\r\n                contacts: prevState.contacts.filter(e => e.id !== id)\r\n            }\r\n        })\r\n    }\r\n  \r\n  contactsFilterInput = (inputValue) => {\r\n        this.setState({\r\n            nameFilter: inputValue,\r\n        })\r\n    }\r\n\r\n  render() {\r\n    const { nameFilter } = this.state\r\n    const visibleContacts = this.filterContactList();\r\n    return (\r\n      <>\r\n        <SectionBlock title=\"Phonebook\">\r\n          <ContactsForm addContact={this.addContact} />\r\n          <ContactsFilter value={nameFilter} OnInputFilter={this.contactsFilterInput} />\r\n          <ContactsList items={visibleContacts} onDeleteContact={this.deleteContact} />\r\n      </SectionBlock>\r\n      </>\r\n    )\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}